on: [push, pull_request]

name: Build

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Run cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check

  unit-tests:
    name: Unit Test Suite -- ${{ matrix.os }} -- ${{ matrix.rust_version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        rust_version: ["1.59.0", "stable"]
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust_version }}
          override: true
      - uses: Swatinem/rust-cache@v1

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-features

  integration-tests:
    name: Integration Test Suite -- ${{ matrix.os }} -- ${{ matrix.rust_version }} -- ${{ matrix.rust_target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        rust_version: ["1.59.0", "stable"]
        rust_target: ["x86_64-unknown-linux-gnu", "aarch64-unknown-linux-gnu"]
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
      - uses: actions/setup-python@v3
      - name: Install Zig
        run: pip install ziglang
      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust_version }}
          target: ${{ matrix.rust_target }}
          override: true
      - uses: Swatinem/rust-cache@v1

      - name: Run cargo build
        uses: actions-rs/cargo@v1
        with:
          command: build

      - name: Test simple example
        shell: bash
        run: |
          cd test/fixtures/single-binary-package
          ../../../target/debug/cargo-lambda lambda build --target-dir ../../../target
          ../../../target/debug/cargo-lambda lambda build --target-dir ../../../target --arm64

  lints:
    name: Lints
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: clippy

      - name: Run cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-features -- -D warnings
